*IndentTab.txt*         Use tabs for indent at the beginning, spaces for alignment in the rest of a line.

			 INDENT TAB    by Ingo Karkat
							       *IndentTab.vim*
description			|IndentTab-description|
usage				|IndentTab-usage|
installation			|IndentTab-installation|
configuration			|IndentTab-configuration|
integration			|IndentTab-integration|
limitations			|IndentTab-limitations|
known problems			|IndentTab-known-problems|
todo				|IndentTab-todo|
history				|IndentTab-history|

==============================================================================
DESCRIPTION					       *IndentTab-description*

This plugin allows you to use your normal tab settings ('tabstop',
'smarttabstop', 'expandtab') for the beginning of the line (up to the first
non-whitespace character), and have <Tab> expanded to the appropriate number
of spaces (i.e. like :set expandtab) anywhere else. This effectively
distinguishes "indenting" from "alignment"; the characters inserted by <Tab>
depend on the local context.

HOW IT WORKS								     *

This plugin overrides the default behavior of the <Tab> and <BS> keys in
insert mode.

RELATED WORKS								     *

- ctab.vim (vimscript #231) by Michael Geddes exists since 2002. It also
  offers global and buffer-local mappings, but uses a slightly different
  approach, does not handle comment[prefixes], instead has some
  filetype-specific stuff. It also remaps <CR>, o and O, and additionally
  offers a :RetabIndent command.
- http://vim.wikia.com/wiki/Converting_tabs_to_spaces

==============================================================================
USAGE							     *IndentTab-usage*

The indent tab can be en-/disabled globally or only for a particular buffer. >
    call IndentTab#Set( isTurnOn, isGlobal )
You probably want to define your own mappings / commands for that, or do this
for certain filetypes only.

<Tab>			Uses normal tab settings at the beginning of the line
			(before the first non-whitespace character), and
			inserts spaces otherwise.
<BS>			Uses normal tab settings to delete tabs at the
			beginning of the line; elsewhere it also removes
			"space-expanded" tabs as if 'softtabstop' were
			enabled.
			The exact circumstances under which the normal tab
			settings apply are configured by the
			|g:IndentTab_scopes| setting.

==============================================================================
INSTALLATION					      *IndentTab-installation*

This script is packaged as a |vimball|. If you have the "gunzip" decompressor
in your PATH, simply edit the *.vmb.gz package in Vim; otherwise, decompress
the archive first, e.g. using WinZip. Inside Vim, install by sourcing the
vimball or via the |:UseVimball| command. >
    vim IndentTab*.vmb.gz
    :so %
To uninstall, use the |:RmVimball| command.

DEPENDENCIES					      *IndentTab-dependencies*

- Requires Vim 7.0 or higher.

==============================================================================
CONFIGURATION					     *IndentTab-configuration*

For a permanent configuration, put the following commands into your |vimrc|:

							  *g:IndentTab_scopes*
Determine where the buffer's indent settings are applied. Elsewhere, spaces
are used for alignment. Comma-separated list of the following values:
    indent:         Initial whitespace at the beginning of a line.
    commentprefix:  Initial whitespace after a comment prefix, in case the line
		    begins with the comment prefix, not any indent.
    comment:        Inside comments, as determined by syntax highlighting.
    string:         Inside strings, as determined by syntax highlighting. >
    let g:IndentTab_scopes = 'indent,commentprefix,string'
<
==============================================================================
INTEGRATION					       *IndentTab-integration*

To determine whether the 'indenttab' setting is active in the current buffer,
you can call IndentTab#Info#IndentTab(), which yields a boolean value. This
can be used as a replacement for a hypothetical ":set indenttab?", e.g. in a
custom 'statusline'.

SUPERTAB INTEGRATION							     *

Plugins like SuperTab (vimscript #1643) overload the <Tab> key with
insert-mode completion and fall back to inserting a literal <Tab> character.
This is in conflict with this plugin's maps. To integrate, set >
    let g:IndentTab_IsSuperTab = 1
This avoids that IndentTab overrides the <Tab> mapping. Inside SuperTab,
instead of returning a literal <Tab>, you need to use the function
IndentTab#SuperTabIntegration#GetExpr() instead.

==============================================================================
LIMITATIONS					       *IndentTab-limitations*

KNOWN PROBLEMS					    *IndentTab-known-problems*

TODO							      *IndentTab-todo*

- Implement better way of en-/dis-abling. :IndentTab[!] :IndentTabLocal[!]?

IDEAS							     *IndentTab-ideas*

==============================================================================
HISTORY							   *IndentTab-history*

1.00	28-Sep-2012
First published version.

0.01	20-Aug-2008
Started development.

==============================================================================
Copyright: (C) 2008-2012 Ingo Karkat
The VIM LICENSE applies to this script; see |copyright|.

Maintainer:	Ingo Karkat <ingo@karkat.de>
==============================================================================
 vim:tw=78:ts=8:ft=help:norl:
